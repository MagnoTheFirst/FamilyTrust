
server.port=8084
spring.datasource.url=${local-db-url}
spring.datasource.username=${local-db-usr}
spring.datasource.password=${local-db-pwd}
spring.jpa.hibernate.ddl-auto=update
springdoc.title="test"
springdoc.description="test description"
springdoc.version="1.0"

# Keycloak OAuth2 Configuration
spring.security.oauth2.client.registration.keycloak.client-id=spring-boot-app
spring.security.oauth2.client.registration.keycloak.client-secret=${keycloak_token}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8084/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,roles

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/realms/quickstart
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Resource Server Configuration (für JWT Token Validation)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/quickstart
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/realms/quickstart/protocol/openid-connect/certs

# Optional: Logging für Debugging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG